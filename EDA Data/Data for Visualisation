import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# Function to perform EDA
def perform_eda(df):
    # 1. Data Structure Understanding
    print("Data Types:\n", df.dtypes)
    print("\nMissing Values:\n", df.isnull().sum())
    print("\nSummary Statistics:\n", df.describe())

    # 2. Visualize the distribution of numerical features
    numerical_features = df.select_dtypes(include=[np.number]).columns

    # Histograms
    df[numerical_features].hist(figsize=(12, 10), bins=20)
    plt.suptitle('Histograms of Numerical Features', fontsize=16)
    plt.tight_layout()
    plt.show()

    # Boxplots to check for outliers
    for feature in numerical_features:
        plt.figure(figsize=(6, 4))
        sns.boxplot(x=df[feature])
        plt.title(f'Boxplot of {feature}')
        plt.show()

    # 3. Correlation Heatmap
    correlation_matrix = df[numerical_features].corr()
    plt.figure(figsize=(12, 8))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5)
    plt.title('Correlation Heatmap of Numerical Features')
    plt.show()

    # 4. Categorical Features Analysis
    categorical_features = df.select_dtypes(include=['object']).columns

    for feature in categorical_features:
        plt.figure(figsize=(6, 4))
        sns.countplot(x=df[feature])
        plt.title(f'Distribution of {feature}')
        plt.show()

    # 5. Analyze Relationships between Features
    # Scatter plot matrix
    sns.pairplot(df, hue='Loan Default Status', diag_kind='kde', height=2.5)
    plt.suptitle('Pairplot of Numerical Features with Loan Default Status', fontsize=16)
    plt.tight_layout()
    plt.show()

    # Groupby and Aggregation (e.g., Mean loan amount by employment status)
    employment_status_group = df.groupby('Employment Status')['Loan Amount'].mean()
    print("\nAverage Loan Amount by Employment Status:\n", employment_status_group)

    # Boxplot for Loan Amount by Loan Default Status
    plt.figure(figsize=(6, 4))
    sns.boxplot(x='Loan Default Status', y='Loan Amount', data=df)
    plt.title('Boxplot of Loan Amount by Loan Default Status')
    plt.show()

    # 6. Outliers Detection and Analysis
    # Outliers in Loan Amount
    plt.figure(figsize=(6, 4))
    sns.boxplot(x=df['Loan Amount'])
    plt.title('Outliers in Loan Amount')
    plt.show()

    # Checking Loan Amount outliers using IQR method
    Q1 = df['Loan Amount'].quantile(0.25)
    Q3 = df['Loan Amount'].quantile(0.75)
    IQR = Q3 - Q1
    outliers = df[(df['Loan Amount'] < (Q1 - 1.5 * IQR)) | (df['Loan Amount'] > (Q3 + 1.5 * IQR))]
    print(f"\nNumber of outliers in 'Loan Amount': {len(outliers)}")

# Generate loan data and preprocess it
df = generate_loan_data(100)
df_cleaned = preprocess_data(df)

# Perform EDA
perform_eda(df_cleaned)
